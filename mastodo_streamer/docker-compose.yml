version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    #ports:
    #  - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  #mongo-express:
  #  image: mongo-express:latest
  #  container_name: mongo-express
  #  restart: always
  #  ports:
  #    - "8081:8081"
  #  environment:
  #    ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
  #    ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASS}
  #    ME_CONFIG_MONGODB_URL: "mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASS}@mongo:27017/admin"

  flask-app:
    build: .
    container_name: flask-app
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB_B=${MONGO_DB_B}
    networks:
      - default
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  dash-app:
    build:
      context: ./dash-app
    container_name: dash-app
    restart: always
    ports:
      - "8050:8050"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB_A=${MONGO_DB_A}
    networks:
      - default

  data-transformer:
    build:
      context: ./data-transformer
    container_name: data-transformer
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB_A=${MONGO_DB_A}
      - MONGO_DB_B=${MONGO_DB_B}
    networks:
      - default


  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - dash-app
    networks:
      - default


volumes:
  mongo-data:
    driver: local
